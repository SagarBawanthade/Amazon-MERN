{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Projetcs\\\\MERN\\\\project2\\\\AmazonClone\\\\frontend\\\\src\\\\screens\\\\OrderScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect, useContext } from 'react';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Store } from '../Store';\nimport { Axios } from 'axios';\nimport { getError } from '../Util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return {\n        ...state,\n        loading: true,\n        error: ''\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        order: action.payload,\n        error: ''\n      };\n    case 'FETCH_FAIL':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nfunction OrderScreen() {\n  _s();\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const navigate = useNavigate();\n  const params = useParams();\n  const {\n    id: orderId\n  } = params;\n  const [{\n    loading,\n    error,\n    order\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    order: {},\n    error: ''\n  });\n  useEffect(() => {\n    const fetchOrder = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await Axios.get(`/api/orders/${orderId}`, {\n          headers: {\n            authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        dispatch({\n          type: 'FETCH_SUCCESS ',\n          payload: data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n    if (!userInfo) {\n      navigate('/login');\n    }\n    if (!order._id || order._id && order._id !== orderId) {\n      fetchOrder();\n    }\n  }, []);\n  return loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 23\n  }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 20\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 17\n  }, this);\n}\n_s(OrderScreen, \"WO6zd+iN4HDXeuEQKdKFhAdmZPs=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = OrderScreen;\nexport default OrderScreen;\nvar _c;\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"names":["React","useReducer","useEffect","useContext","LoadingBox","MessageBox","useNavigate","useParams","Store","Axios","getError","jsxDEV","_jsxDEV","reducer","state","action","type","loading","error","order","payload","OrderScreen","_s","userInfo","navigate","params","id","orderId","dispatch","fetchOrder","data","get","headers","authorization","token","err","_id","fileName","_jsxFileName","lineNumber","columnNumber","variant","children","_c","$RefreshReg$"],"sources":["D:/Web Development/Projetcs/MERN/project2/AmazonClone/frontend/src/screens/OrderScreen.js"],"sourcesContent":["import React, { useReducer, useEffect, useContext } from 'react';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Store } from '../Store';\r\nimport { Axios } from 'axios';\r\nimport { getError } from '../Util';\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_REQUEST':\r\n            return { ...state, loading: true, error: '' };\r\n        case 'FETCH_SUCCESS':\r\n            return { ...state, loading: false, order: action.payload, error: '' };\r\n        case 'FETCH_FAIL':\r\n            return { ...state, loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nfunction OrderScreen() {\r\n\r\n    const { state } = useContext(Store);\r\n    const { userInfo } = state;\r\n\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n    const { id: orderId } = params;\r\n\r\n    const [{ loading, error, order }, dispatch] = useReducer(reducer, {\r\n        loading: true,\r\n        order: {},\r\n        error: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchOrder = async () => {\r\n            try {\r\n                dispatch({ type: 'FETCH_REQUEST' });\r\n                const { data } = await Axios.get(`/api/orders/${orderId}`, {\r\n                    headers: { authorization: `Bearer ${userInfo.token}` },\r\n                });\r\n                dispatch({ type: 'FETCH_SUCCESS ', payload: data });\r\n            } catch (err) {\r\n                dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\r\n            }\r\n        };\r\n\r\n        if (!userInfo) {\r\n            navigate('/login');\r\n        }\r\n        if (!order._id || (order._id && order._id !== orderId)) {\r\n            fetchOrder();\r\n        }\r\n    }, []);\r\n\r\n    return loading ? (<LoadingBox></LoadingBox>)\r\n        : error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\r\n            : (\r\n                <div>\r\n\r\n                </div>\r\n            );\r\n\r\n}\r\n\r\nexport default OrderScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}